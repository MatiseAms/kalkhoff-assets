/*  Grid Specific values */
/* Default use:
  @include min-(width,4,240);

  use width calculation
  @include min-(width,4,240,'calc(100% - 240px)');
*/
/* Generate the classes */
/* @function c($map){
 $value: to-string(&);
 $new: (slugify($value) : $value); //
 $map: map-merge($map,$new);
 @return $map;
}

 */
/*
	Use font-include for single fonts
	and font-list for a list using the $*-font-weights list
*/
/* embed sing font weight */
@font-face {
  font-family: "Roboto Condensed";
  src: url("/fonts/RobotoCondensed-Light.eot?#iefix") format("embedded-opentype"), url("/fonts/RobotoCondensed-Light.woff") format("woff"), url("/fonts/RobotoCondensed-Light.ttf") format("truetype"), url("/fonts/RobotoCondensed-Light.svg#Roboto Condensed") format("svg");
  /* Legacy iOS */
  font-weight: 300;
  font-style: normal;
}

@font-face {
  font-family: "Roboto Condensed";
  src: url("/fonts/RobotoCondensed-Regular.eot?#iefix") format("embedded-opentype"), url("/fonts/RobotoCondensed-Regular.woff") format("woff"), url("/fonts/RobotoCondensed-Regular.ttf") format("truetype"), url("/fonts/RobotoCondensed-Regular.svg#Roboto Condensed") format("svg");
  /* Legacy iOS */
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: "Roboto Condensed";
  src: url("/fonts/RobotoCondensed-Bold.eot?#iefix") format("embedded-opentype"), url("/fonts/RobotoCondensed-Bold.woff") format("woff"), url("/fonts/RobotoCondensed-Bold.ttf") format("truetype"), url("/fonts/RobotoCondensed-Bold.svg#Roboto Condensed") format("svg");
  /* Legacy iOS */
  font-weight: 600;
  font-style: normal;
}

/* embed font family as list */
.heading-font-family {
  font-family: Roboto Condensed, serif;
  text-transform: uppercase;
}

/* embed sing font weight */
/* embed font family as list */
@font-face {
  font-family: "Roboto";
  src: url("/fonts/Roboto-Light.eot?#iefix") format("embedded-opentype"), url("/fonts/Roboto-Light.woff") format("woff"), url("/fonts/Roboto-Light.ttf") format("truetype"), url("/fonts/Roboto-Light.svg#Roboto") format("svg");
  /* Legacy iOS */
  font-weight: 300;
  font-style: normal;
}

@font-face {
  font-family: "Roboto";
  src: url("/fonts/Roboto-Regular.eot?#iefix") format("embedded-opentype"), url("/fonts/Roboto-Regular.woff") format("woff"), url("/fonts/Roboto-Regular.ttf") format("truetype"), url("/fonts/Roboto-Regular.svg#Roboto") format("svg");
  /* Legacy iOS */
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: "Roboto";
  src: url("/fonts/Roboto-Medium.eot?#iefix") format("embedded-opentype"), url("/fonts/Roboto-Medium.woff") format("woff"), url("/fonts/Roboto-Medium.ttf") format("truetype"), url("/fonts/Roboto-Medium.svg#Roboto") format("svg");
  /* Legacy iOS */
  font-weight: 500;
  font-style: normal;
}

@font-face {
  font-family: "Roboto";
  src: url("/fonts/Roboto-Bold.eot?#iefix") format("embedded-opentype"), url("/fonts/Roboto-Bold.woff") format("woff"), url("/fonts/Roboto-Bold.ttf") format("truetype"), url("/fonts/Roboto-Bold.svg#Roboto") format("svg");
  /* Legacy iOS */
  font-weight: 600;
  font-style: normal;
}

.body-font-family {
  font-family: Roboto, sans-serif;
  font-weight: normal;
}

/* embed sing font weight */
/* embed font family as list */
@font-face {
  font-family: "Roboto Mono";
  src: url("/fonts/RobotoMono-Regular.eot?#iefix") format("embedded-opentype"), url("/fonts/RobotoMono-Regular.woff") format("woff"), url("/fonts/RobotoMono-Regular.ttf") format("truetype"), url("/fonts/RobotoMono-Regular.svg#Roboto Mono") format("svg");
  /* Legacy iOS */
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: "Roboto Mono";
  src: url("/fonts/RobotoMono-Bold.eot?#iefix") format("embedded-opentype"), url("/fonts/RobotoMono-Bold.woff") format("woff"), url("/fonts/RobotoMono-Bold.ttf") format("truetype"), url("/fonts/RobotoMono-Bold.svg#Roboto Mono") format("svg");
  /* Legacy iOS */
  font-weight: 600;
  font-style: normal;
}

.code-font-family {
  font-family: Roboto Mono, Monaco, courier, monospace, sans-serif;
  font-weight: normal;
}

* input[type=checkbox] + label {
  padding-left: 1rem;
  position: relative;
  cursor: pointer;
}

* input[type=checkbox] + label:before {
  content: "";
  display: block;
  position: absolute;
  left: 0;
  top: 0;
  width: 1rem;
  height: 1rem;
  background: #ffffff;
  border-radius: 50%;
}

* input[type=checkbox] + label:after {
  content: "";
  display: block;
  position: absolute;
  left: 0.25rem;
  top: 0.25rem;
  width: 0.5rem;
  height: 0.5rem;
  background: #1a1b1a;
  border-radius: 50%;
  opacity: 0;
  transition: 0.3s;
}

* input[type=checkbox]:checked + label:after {
  opacity: 1;
  transition: 0.3s;
}

* input[type=checkbox] + label:before {
  box-shadow: 0 0 0 1px rgba(26, 27, 26, 0.25) inset;
}

* input[type=checkbox]:checked + label:before {
  background-color: #1a1b1a;
}

* input[type=checkbox] + label:after {
  transform: scale(0.7) rotate(-45deg) translateY(0rem);
  background: none;
  border-left: 2px solid black;
  border-bottom: 2px solid black;
  border-radius: 0;
  width: 8px;
  height: 4px;
  margin: 0;
  top: 3px;
  left: 3px;
  opacity: 0.15;
  transition: 0.1s;
}

* input[type=checkbox]:checked + label:after {
  transform: scale(1) rotate(-45deg) translateY(0rem);
  border-color: white;
}

* input[type=checkbox] + label {
  padding-left: 2rem;
}

* input[type=radio] + label {
  padding-left: 1rem;
  position: relative;
  cursor: pointer;
}

* input[type=radio] + label:before {
  content: "";
  display: block;
  position: absolute;
  left: 0;
  top: 0;
  width: 1rem;
  height: 1rem;
  background: #ffffff;
  border-radius: 100%;
}

* input[type=radio] + label:after {
  content: "";
  display: block;
  position: absolute;
  left: 0.25rem;
  top: 0.25rem;
  width: 0.5rem;
  height: 0.5rem;
  background: #1a1b1a;
  border-radius: 100%;
  opacity: 0;
  transition: 0.3s;
}

* input[type=radio]:checked + label:after {
  opacity: 1;
  transition: 0.3s;
}

* input[type=radio] + label:before {
  box-shadow: 0 0 0 1px rgba(26, 27, 26, 0.5) inset;
  margin-right: 1rem;
}

* input[type=radio] + label:after {
  border-radius: 50%;
}

* input[type=radio] + label {
  padding-left: 2rem;
}

/*# sourceMappingURL=assets.css.map */