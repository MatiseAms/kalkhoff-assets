%#{$prefix}colorDot{
	position: relative; display: inline-block;

	input[type="radio"]{
		@include input-radio($assets-elements-color-dot-width,$assets-elements-color-dot-height,0, $assets-elements-color-dot-gutter, var(--this-color), color(khWhite));
		@include input-radio-body{
			box-shadow: none;
		}
		@include input-body{
			transform: rotate(0deg); transition: $assets-transition;
		}
		@include input-body-checked{
			transform: scale($assets-elements-color-dot-active-scale);
		}
		@include input-radio-check{
			opacity: 1; transform: scale(0); transition: transform 0.15s 0.3s; box-shadow: #{$assets-elements-color-dot-shadow-size} #{$assets-elements-color-dot-shadow-color};
		}
		@include input-radio-check-checked{
			opacity: 1; transform: scale(1); transition: transform 0.15s 0.3s;
		}
	}
	&+.#{$prefix}colorDot{
		margin: $assets-elements-color-dot-margin;
	}
	@extend %#{$prefix}tooltip;
}

@mixin colorDot__colors($prefix: "",$pre: false){
	@each $color-name,$color-value in $colors{
		@if $pre{
			&.#{$prefix}#{$color-name}, //
			&.#{$prefix}#{str-replace($color-name,"kh","")}, //
			&.#{$prefix}#{to-lower-case(str-replace($color-name,"kh",""))}, //
			&[data-primary-color=#{$color-name}], //
			&[data-primary-color=#{to-lower-case(str-replace($color-name,"kh",""))}]{
				// background-color: $color-value;
				input[type="radio"]{
					@include input-radio-body{
						background-color: $color-value;
						@if color-brightness($color-value) > $assets-elements-color-dot-shadow-brightness{
							box-shadow: #{$assets-elements-color-dot-shadow-size} #{$assets-elements-color-dot-shadow-color};
						}
					}
				}
			}
		}@else{
			.#{$prefix}#{$color-name}, //
			.#{$prefix}#{str-replace($color-name,"kh","")}, //
			.#{$prefix}#{to-lower-case(str-replace($color-name,"kh",""))}{
				input[type="radio"]{
					@include input-radio-body{
						background-color: $color-value;
						@if color-brightness($color-value) > $assets-elements-color-dot-shadow-brightness{
							box-shadow: #{$assets-elements-color-dot-shadow-size} #{$assets-elements-color-dot-shadow-color};
						}
					}
				}
			}
		}
	}
}


@mixin colorDot__dual($prefix: "",$pre: false){
	@each $color-name,$color-value in $colors{
		@if $pre{
			&.#{$prefix}#{$color-name}, //
			&.#{$prefix}#{str-replace($color-name,"kh","")}, //
			&.#{$prefix}#{to-lower-case(str-replace($color-name,"kh",""))}{
				// background-color: $color-value;
				input[type="radio"]{
					@include input-radio-body{
						background-image: linear-gradient(to right bottom, rgba($color-value,0) 50%, rgba($color-value,1) 50%);
						@if color-brightness($color-value) > $assets-elements-color-dot-shadow-brightness{
							box-shadow: #{$assets-elements-color-dot-shadow-size} #{$assets-elements-color-dot-shadow-color};
						}
					}
				}
			}
		}@else{
			.#{$prefix}#{$color-name}, //
			.#{$prefix}#{str-replace($color-name,"kh","")}, //
			.#{$prefix}#{to-lower-case(str-replace($color-name,"kh",""))}{
				input[type="radio"]{
					@include input-radio-body{
						background-image: linear-gradient(to right bottom, rgba($color-value,0) 50%, rgba($color-value,1) 50%);
						@debug #{$color-name};
						@if color-brightness($color-value) > $assets-elements-color-dot-shadow-brightness{
							box-shadow: #{$assets-elements-color-dot-shadow-size} #{$assets-elements-color-dot-shadow-color};
						}
					}
				}
			}
		}
	}
}
