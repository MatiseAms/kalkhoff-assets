// Color Function

@function shade($color, $percentage){
	@return mix(black, $color, $percentage);
}
@function tint($color, $percentage){
	@return mix(white, $color, $percentage);
}

@function color($value, $rgba: false, $colorset: $colors-primary, $warning: true, $boolean: false){
	$colorName: $value; //
	$prefixed: str-insert(to-string($value),"kh",0); //

	@if color-exist($value, $colorset) == false{
		// check if prefixed version exists;
		@if color-exist($prefixed, $colorset) == true{
			$colorName: $prefixed;
			@if $boolean == true{
				@return true;
			}
		}
		// check if color exists in alternative colorset;
		@elseif color-exist($value, $colors-secondary) == true{
			@if $boolean == true{
				@return true;
			}
			$colorset: $colors-secondary;
		}
		// otherwise throw warning;
		@else{
			@if $boolean == true{
				@return false;
			}
			@if $warning == true{
				@warn  "color: #{$value} doesn't exist";
			}
		}
	} @else{
		@if $boolean == true{
			@return true;
		}
	}
	// return the color;
	@if $rgba != false{
		@return rgba(map-get($colorset, $colorName),$rgba);
	} @else{
		@return map-get($colorset, $colorName);
	}
}
@function color-exist($value, $colorset: $colors-primary){
	$color: map-get($colorset, $value);
	@if $color == null{
		@return false;
	} @else{
		@return true;
	}
}

@function colorByKey($key,$colorset: $colors-primary, $return: "value"){
	$color-list: nth($colorset,$key); // List
	$color-name: nth($color-list,1); // Name
	$color-value: nth($color-list,2); // Value
	// Return
	@if $return == "value"{
		@return $color-value;
	} @elseif $return == "name"{
		@return $color-name;
	} @elseif $return == "list"{
		@return $color-list;
	}
}

@function color-brightness($color,$percentage: true){
	@if color($color, false,$colors-primary, false,true){
		$color: color($color);  //
	}

	$sum: red($color) + green($color) + blue($color);  // sum
	$average: (((red($color) / 255) * 100) + ((green($color) / 255) * 100) + ((blue($color) / 255) * 100)) / 3; // average
	@if $percentage{
		@return percentage($sum / (255*3));
	} @else{
		@debug ($sum / (255*3) * 100);
		@return ($sum / (255*3) * 100);
	}
}


@function contra($value, $contrast: 50, $dark: color(Black), $light: color(White)){
	$color: black;
	@if color-exist($value){
		$color: color($value);
	} @else{
		$color: $value;
	}
	@if color-brightness($color) > $contrast{
		@return $dark;
	} @else{
		@return $light;
	}
}

@function native-rgba($string, $opacity){
	@return #{"rgba(#{$string}, #{$opacity})"};
}
