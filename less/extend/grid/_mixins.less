//
//  Matise grid mixins
//  _____________________________________________
//
//  Generates grid classes using aliases instead of column numbers
//  ---------------------------------------------

.generateAliases(@index, @breakpoint: false, @target: row) when (@index < length(@assets-column-aliases)) {
	@key: extract(extract(@assets-column-aliases, @index), 1);
	@value: extract(extract(@assets-column-aliases, @index), 2);

	& when (@target = row) {
		& when (@breakpoint = false) {
			&.@{prefix}@{key} > .@{prefix}column {
				width: @value;
			}
		}

		& when not (@breakpoint = false) {
			&.@{prefix}@{breakpoint}-@{key} > .@{prefix}column {
				width: @value;
			}
		}
	}

	& when (@target = column) {
		& when (@breakpoint = false) {
			&.@{prefix}@{key}{
				width: @value;
			}
		}

		& when not (@breakpoint = false) {
			&.@{prefix}@{breakpoint}-@{key}{
				width: @value;
			}
		}
	}
	.generateAliases(@index + 1, @breakpoint, @target);
}
//
//  Generates grid classes using column numbers
//  ---------------------------------------------

.generateClasses(@index, @breakpoint: false, @only: false, @target: row) when (@index <= @assets-grid-columns) {
	@colWidth: (100% * (@index / @assets-grid-columns));

	& when (@breakpoint = false) {
		.generateAliases(1, @breakpoint, @target);

		&.@{prefix}column-@{index} > .@{prefix}column {
			width: @colWidth;
		}

		&.@{prefix}offset-@{index} > .@{prefix}column {
			margin-left: @colWidth;
		}

		&.@{prefix}push-@{index} > .@{prefix}column {
			margin-right: @colWidth;
		}

		&.@{prefix}pull-@{index} > .@{prefix}column {
			margin-left: -@colWidth;
		}
	}

	& when not (@breakpoint = false) {
		& when (@only = false) {
			.generateAliases(1, @breakpoint, @target);

			& when (@target = row) {
				&.@{prefix}@{breakpoint}-@{index} > .@{prefix}column {
					width: @colWidth;
				}

				&.@{prefix}offset-@{breakpoint}-@{index} > .@{prefix}column {
					margin-left: @colWidth;
				}

				&.@{prefix}push-@{breakpoint}-@{index} > .@{prefix}column {
					margin-right: @colWidth;
				}

				&.@{prefix}pull-@{breakpoint}-@{index} > .@{prefix}column {
					margin-left: -@colWidth;
				}
			}

			& when (@target = column) {
				&.@{prefix}@{breakpoint}-@{index}{
					width: @colWidth;
				}

				&.@{prefix}offset-@{breakpoint}-@{index}{
					margin-left: @colWidth;
				}

				&.@{prefix}push-@{breakpoint}-@{index}{
					margin-right: @colWidth;
				}

				&.@{prefix}pull-@{breakpoint}-@{index}{
					margin-left: -@colWidth;
				}
			}
		}

		& when not (@only = false) {
			& when (@target = row) {
				&.@{prefix}@{breakpoint}-@{only}-@{index} > .@{prefix}column {
					width: @colWidth;
				}

				&.@{prefix}offset-@{breakpoint}-@{only}-@{index} > .@{prefix}column {
					margin-left: @colWidth;
				}

				&.@{prefix}push-@{breakpoint}-@{only}-@{index} > .@{prefix}column {
					margin-right: @colWidth;
				}

				&.@{prefix}pull-@{breakpoint}-@{only}-@{index} > .@{prefix}column {
					margin-left: -@colWidth;
				}
			}

			& when (@target = column) {
				&.@{prefix}@{breakpoint}-@{only}-@{index}{
					width: @colWidth;
				}

				&.@{prefix}offset-@{breakpoint}-@{only}-@{index}{
					margin-left: @colWidth;
				}

				&.@{prefix}push-@{breakpoint}-@{only}-@{index}{
					margin-right: @colWidth;
				}

				&.@{prefix}pull-@{breakpoint}-@{only}-@{index}{
					margin-left: -@colWidth;
				}
			}
		}
	}
	.generateClasses(@index + 1, @breakpoint, @only, @target);
}
//
//  Generates style helpers classes based on given column width
//  ---------------------------------------------

.generateStyleHelpers(@index) when (@index <= @assets-grid-columns) {
	@colWidth: (100vw * (@index / @assets-grid-columns));
	@numberPrefix: @index;

	& when (@index < 10) {
		@numberPrefix: e(~'0@{index}');
	}

	.@{prefix}padding-@{numberPrefix}{
		padding: @colWidth;
	}

	.@{prefix}padding-top-@{numberPrefix}{
		padding-top: @colWidth;
	}

	.@{prefix}padding-right-@{numberPrefix}{
		padding-right: @colWidth;
	}

	.@{prefix}padding-bottom-@{numberPrefix}{
		padding-bottom: @colWidth;
	}

	.@{prefix}padding-left-@{numberPrefix}{
		padding-left: @colWidth;
	}

	.@{prefix}margin-@{numberPrefix}{
		margin: @colWidth;
	}

	.@{prefix}margin-top-@{numberPrefix}{
		margin-top: @colWidth;
	}

	.@{prefix}margin-right-@{numberPrefix}{
		margin-right: @colWidth;
	}

	.@{prefix}margin-bottom-@{numberPrefix}{
		margin-bottom: @colWidth;
	}

	.@{prefix}margin-left-@{numberPrefix}{
		margin-left: @colWidth;
	}

	.@{prefix}top-@{numberPrefix}{
		top: @colWidth;
	}

	.@{prefix}right-@{numberPrefix}{
		right: @colWidth;
	}

	.@{prefix}bottom-@{numberPrefix}{
		bottom: @colWidth;
	}

	.@{prefix}left-@{numberPrefix}{
		left: @colWidth;
	}

	.@{prefix}width-@{numberPrefix}{
		width: @colWidth;
	}

	.@{prefix}max-width-@{numberPrefix}{
		max-width: @colWidth;
	}

	.@{prefix}height-@{numberPrefix}{
		height: @colWidth;
	}

	.@{prefix}max-height-@{numberPrefix}{
		max-height: @colWidth;
	}
	.generateStyleHelpers(@index + 1);
}
